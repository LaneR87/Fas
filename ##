#include <iostream>
#include <vector>
#include <algorithm>
#include <random>
#include <random>
int main() {

    std::cout << "Неотсортированный массив: ";
    for (const int& num : numbers) {
        std::cout << num << " ";

    for (const int& num : numbers) {
        std::cout << num << " ";
    }// Сортируем массив
    std::sort(numbers.begin(), numbers.end());

    // Выводим отсортированный массив
    std::cout << "Отсортированный массив: ";
    for (const int& num : numbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    return 0;    // Генерируем случайное начальное значение для генератора случайных чисел
    std::random_device rd;
    std::mt19937 gen(rd());

    // Создаем случайный массив из 10000 элементов
    std::vector<int> numbers(100);
    for (int i = 0; i < 100; ++i) {
        numbers[i] = gen() % 1000; // Генерируем случайное число от 0 до 999
    }
#include <random>
    // Выводим неотсортированный массив
}
#include <iostream>
#include <vector>
#include <algorithm>
#include <random>
#include <random>
int main() {
    // Генерируем случайное начальное значение для генератора случайных чисел
    std::random_device rd;
    std::mt19937 gen(rd());

    // Создаем случайный массив из 10000 элементов
    std::vector<int> numbers(100);
    for (int i = 0; i < 100; ++i) {
        numbers[i] = gen() % 1000; // Генерируем случайное число от 0 до 999
    }
#include <random>
    // Выводим неотсортированный массив
    std::cout << "Неотсортированный массив: ";
    for (const int& num : numbers) {
        std::cout << num << " ";
    }    }
    std::cout << std::endl;

    // Сортируем массив
    std::sort(numbers.begin(), numbers.end());

    // Выводим отсортированный массив
    std::cout << "Отсортированный массив: ";
    std::cout << std::endl;

    // Сортируем массив
    std::sort(numbers.begin(), numbers.end());

    // Выводим отсортированный массив
    std::cout << "Отсортированный массив: ";
    for (const int& num : numbers) {
        std::cout << num << "     }
    std::cout << std::endl;

    // Сортируем массив
    std::sort(numbers.begin(), numbers.end());

    // Выводим отсортированный массив
    std::cout << "Отсортированный массив: ";";
    }// Сортируем массив
    std::sort(numbers.begin(), numbers.end());

    // Выводим отсортированный массив
    std::cout << "Отсортированный массив: ";
    for (const int& num : numbers) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    return 0;
}
   asd
